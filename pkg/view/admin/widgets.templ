package admin

import (
	"fmt"
	"github.com/aandrku/portfolio-v2/pkg/model"
	"github.com/aandrku/portfolio-v2/pkg/services/project"
	"os"
)

templ AnalyticsWidget() {
	<div
		id="analytics-widget"
		class="border border-zinc-700 w-full py-4 px-6 rounded-md relative bg-zinc-800 shadow-lg shadow-black/20 "
		hx-get="/admin/analytics"
		hx-trigger="every 1s"
		hx-swap="outerHTML"
		hx-target="#analytics"
	>
		<div class="absolute -top-3 left-5 bg-zinc-900 px-2 text-lg text-zinc-400 rounded-md border border-zinc-700">
			Analytics
		</div>
		<div id="analytics" class="flex flex-row justify-start h-full px-6 gap-10 py-4">
			<div>
				<div class="text-sm text-zinc-400">Visits Today</div>
				<div class="text-3xl font-semibold text-zinc-100">..</div>
			</div>
			<div>
				<div class="text-sm text-zinc-400">Total Visits</div>
				<div class="text-3xl font-semibold text-zinc-100">..</div>
			</div>
		</div>
	</div>
}

templ AboutWidget() {
	<div id="about-widget" class="border border-zinc-700 w-full  rounded-md relative bg-zinc-800 shadow-lg shadow-black/20">
		<div class="absolute -top-3 left-5 bg-zinc-900 px-2 text-lg text-zinc-400 rounded-md border border-zinc-700">
			About
		</div>
		<div class="flex flex-col gap-4 p-6">
			<button
				class="w-full text-left bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-6 py-2 rounded-md text-sm font-medium transition"
				hx-get="/admin/about/update-name-form"
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Update Name
			</button>
			<button
				class="w-full text-left bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-6 py-2 rounded-md text-sm font-medium transition"
				hx-get="/admin/about/update-short-desc-form"
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Update Short Description
			</button>
			<button
				class="w-full text-left bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-6 py-2 rounded-md text-sm font-medium transition"
				hx-get="/admin/about/update-avatar-form"
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Update Avatar
			</button>
			<button
				class="w-full text-left bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-6 py-2 rounded-md text-sm font-medium transition"
				hx-get="/admin/about/update-description-form"
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Update Description
			</button>
		</div>
	</div>
}

templ BlogWidget(posts []*model.Post) {
	<div
		id="blog-widget"
		class="border border-zinc-700 w-full h-full rounded-md relative bg-zinc-800 shadow-lg shadow-black/20"
		hx-get="/admin/blog/widget"
		hx-swap="outerHTML"
		hx-trigger="updateBlog from:body"
	>
		<div class="absolute -top-3 left-5 bg-zinc-900 px-2 text-lg text-zinc-400 rounded-md border border-zinc-700">
			Blog
		</div>
		<div class="absolute top-4 right-4">
			<button
				class="bg-zinc-700 hover:bg-zinc-600 text-zinc-100 text-sm font-medium px-3 py-1 rounded-md border border-zinc-600 shadow-sm"
				hx-get="/admin/blog/create-form"
				hx-target="#root"
				hx-swap="afterbegin"
			>
				+ New Post
			</button>
		</div>
		<div class="flex flex-col gap-6 p-6 pt-10 overflow-y-auto h-full">
			for _, p := range posts {
				@postCard(p)
			}
		</div>
	</div>
}

templ postCard(post *model.Post) {
	<div class="flex flex-col gap-2">
		<h3 class="text-zinc-100 text-lg font-semibold">{ post.Title }</h3>
		<p class="text-zinc-400 text-sm">{ post.UpdatedAt.Format("Jan, 2, 2006") } â€” { post.ShortDesc }</p>
		<div class="flex justify-between flex-wrap gap-2 text-sm mt-1">
			<button
				class="bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-3 py-1 rounded-md transition"
				hx-get={ "/admin/blog/update-title-form/" + post.Id.String() }
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Edit Title
			</button>
			<button
				class="bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-3 py-1 rounded-md transition"
				hx-get={ "/admin/blog/update-short-desc-form/" + post.Id.String() }
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Edit Short Description
			</button>
			<button
				class="bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-3 py-1 rounded-md transition"
				hx-get={ "/admin/blog/update-content-form/" + post.Id.String() }
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Edit Content
			</button>
			<button
				class="ml-auto bg-red-800/50 hover:bg-red-900 text-white px-3 py-1 rounded-md transition"
				hx-get={ "/admin/blog/delete-form/" + post.Id.String() }
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Remove
			</button>
		</div>
	</div>
}

templ ProjectsWidget(projects []project.Project) {
	<div
		id="projects-widget"
		class="pt-10 border border-zinc-700 w-full h-3/4 rounded-md relative bg-zinc-800 shadow-lg shadow-black/20"
		hx-get="/admin/projects"
		hx-target="#project-list"
		hx-trigger="updateProjects from:body"
		hx-swap="outerHTML"
	>
		<div class="absolute -top-3 left-5 bg-zinc-900 px-2 text-lg text-zinc-400 rounded-md border border-zinc-700">
			Projects
		</div>
		<!-- New Project Button -->
		<div class="absolute top-5 right-5">
			<button
				class="bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-3 py-1 rounded-md border border-zinc-600 text-sm transition"
				hx-get="/admin/projects/create-form"
				hx-target="body"
				hx-swap="beforeend"
			>
				+ New Project
			</button>
		</div>
		@ProjectList(projects)
	</div>
}

templ ProjectList(projects []project.Project) {
	<div id="project-list" class="flex flex-col gap-6 p-6 pt-10 overflow-y-auto h-full">
		for _, p := range projects {
			@projectCard(p)
		}
	</div>
}

templ projectCard(p project.Project) {
	<div class="flex flex-col border border-zinc-700 rounded-md p-4 bg-zinc-700/20 gap-3">
		<div>
			<h3 class="text-zinc-100 text-lg font-semibold">{ p.Title }</h3>
			<p class="text-zinc-400 text-sm mt-1">{ p.ShortDesc }</p>
		</div>
		<div class="flex flex-wrap gap-2 text-sm justify-end">
			<button
				class="bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-3 py-1 rounded-md transition"
				hx-get={ "/admin/projects/" + p.ID.String() + "/update-form" }
				hx-target="#root"
				hx-swap="afterbegin"
			>Edit</button>
			<button
				hx-get={ "/admin/projects/" + p.ID.String() + "/delete-form" }
				hx-target="#root"
				hx-swap="afterbegin"
				class="bg-red-800/50 hover:bg-red-900 text-white px-3 py-1 rounded-md transition"
			>Delete</button>
		</div>
	</div>
}

templ SystemStatsWidget(stats model.Stats) {
	<div
		id="system-stats-widget"
		class="border border-zinc-700 w-full flex-grow rounded-md relative bg-zinc-800 shadow-lg shadow-black/20"
		hx-get="/admin/stats"
		hx-trigger="every 5s"
		hx-swap="outerHTML"
	>
		<div class="absolute -top-3 left-5 bg-zinc-900 px-2 text-lg text-zinc-400 rounded-md border border-zinc-700">
			System Stats
		</div>
		<div class="flex flex-col gap-5 p-6 text-base">
			<div class="flex justify-between items-center">
				<p class="text-zinc-300 text-lg">CPU Usage</p>
				<p class="text-zinc-100 text-xl font-semibold">{ stats.CPUUsagePercent() }</p>
			</div>
			<div class="flex justify-between items-center">
				<p class="text-zinc-300 text-lg">Memory</p>
				<p class="text-zinc-100 text-xl font-semibold">{ stats.MemoryUsedGB() } / { stats.MemoryTotalGB() }</p>
			</div>
			<div class="flex justify-between items-center">
				<p class="text-zinc-300 text-lg">Disk Usage</p>
				<p class="text-zinc-100 text-xl font-semibold">{ stats.DiskUsedGB() } / { stats.DiskTotalGB() }</p>
			</div>
			<div class="flex justify-between items-center">
				<p class="text-zinc-300 text-lg">Uptime</p>
				<p class="text-zinc-100 text-xl font-semibold">{ stats.UptimeString() }</p>
			</div>
		</div>
	</div>
}

templ UploadsManagementWidget(uploads []os.FileInfo) {
	<div
		id="uploads-widget"
		class="border border-zinc-700 w-full h-1/4 rounded-md relative bg-zinc-800 shadow-lg shadow-black/20"
		hx-get="/admin/upload"
		hx-trigger="updateUploads from:body"
		hx-swap="outerHTML"
	>
		<div class="absolute -top-3 left-5 bg-zinc-900 px-2 text-lg text-zinc-400 rounded-md border border-zinc-700">
			Uploads Management Widget
		</div>
		<div class="h-full flex flex-col gap-4 p-6 pt-10 overflow-y-auto">
			<!-- Upload Button -->
			<button
				class="w-full text-left bg-zinc-700 hover:bg-zinc-600 text-zinc-100 px-4 py-2 rounded-md text-sm font-medium transition"
				hx-get="/admin/upload/form"
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Upload New Asset
			</button>
			for _, upload := range uploads {
				@UploadCard(upload)
			}
		</div>
	</div>
}

templ UploadCard(upload os.FileInfo) {
	<div class="flex justify-between items-center text-sm text-zinc-400">
		<span>{ upload.Name() }</span>
		<div class="flex items-center gap-2">
			<span>{ bytesToSizeString(upload.Size()) }</span>
			<button
				class="ml-2 bg-red-800/50 hover:bg-red-900 text-white px-2 py-1 rounded-md text-xs transition"
				hx-get={ "/admin/upload/delete-form/" + upload.Name() }
				hx-target="#root"
				hx-swap="afterbegin"
			>
				Remove
			</button>
		</div>
	</div>
}

// bytesToSizeString takes in the amount of bytes
// and returns a nicely formatted string like this - 246kb
func bytesToSizeString(bytes int64) string {
	const (
		kb = 1 << 10 // 1024
		mb = 1 << 20 // 1024 * 1024
		gb = 1 << 30 // etc.
		tb = 1 << 40
	)

	switch {
	case bytes >= tb:
		return fmt.Sprintf("%.1ftb", float64(bytes)/float64(tb))
	case bytes >= gb:
		return fmt.Sprintf("%.1fgb", float64(bytes)/float64(gb))
	case bytes >= mb:
		return fmt.Sprintf("%.1fmb", float64(bytes)/float64(mb))
	case bytes >= kb:
		return fmt.Sprintf("%.1fkb", float64(bytes)/float64(kb))
	default:
		return fmt.Sprintf("%d bytes", bytes)
	}
}
